- name: Upgrade Standalone NetScaler
  hosts: netscalers
  remote_user: "{{ nitro_user }}"
  connection: citrix.adc.ssh_citrix_adc
  gather_facts: false
  vars_files: variables.yaml

  vars:
    ansible_python_interpreter: '{{ netscaler_python_path | default("/var/python/bin/python") }}'

  tasks:
    - name: Finding the current version of the NetScaler
      shell: "nscli -s -U :{{nitro_user}}:{{nitro_pass}} show version | grep -i 'NetScaler NS'"

      register: version

    - name: NetScaler version
      ansible.builtin.debug:
        msg: "{{ version[\"stdout_lines\"][0] | regex_replace(': Build ','-') | regex_replace('.nc.*$', '') | regex_replace('^.*NS', '') }}"
      register: present_version

    - name: NetScaler is already at the desired version
      ansible.builtin.debug:
        msg: "NetScaler is already at the desired version {{netscaler_target_version}}. Ending the play for {{nsip}}"
      when: present_version['msg'] == netscaler_target_version

    - name: End play for host {{nsip}}
      ansible.builtin.meta: end_host
      when: present_version['msg'] == netscaler_target_version

    - name: Copy build file from local machine to the Remote NetScaler
      ansible.builtin.copy:
        src: "{{local_build_file_full_path_with_name}}"
        dest: "{{netscaler_build_location}}"
      when: ((want_to_copy_build == "yes") or (want_to_copy_build == "YES"))

    - name: Untar the build file
      shell: "tar -xvzf {{ netscaler_build_location }}{{ netscaler_build_file_name }} -C {{ netscaler_build_location }}"
      register: tar_output

    - name: Upgrade build
      shell: "./installns -Y"
      args:
        chdir: "{{ netscaler_build_location }}"
      async: 120
      poll: 0
